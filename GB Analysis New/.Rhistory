scale_color_manual(values = myColors) +
myTheme() +
labs(x = "Distance (nm)",
y = "Count") +
theme(legend.position = "bottom"))
}
OneDCountFunc(RangedPos, 40, "z")
#### Read intial .pos file ####
PosLocation <- c("Simulated GB.pos")
source("readposR.R")
PosFileInput <- readposR(PosLocation)
##### Combine .pos file with .rrng file to get chemical information ####
RangeFileLocation <- c("Range For Simulation.rrng")
source("Combine Pos and Range File.R")
PosFileRanger(PosFileInput,
RangeFileLocation)
rm(Ion, PosFileInput, PosFileRanger, PosLocation, RangeFileLocation, readposR)
#### Generate 1D concentration profile ####
source("PosOneDimensionalPlot.R")
OneDCountFunc(RangedPos, 40, "z")
OneDCountFunc(RangedPos, 40, "y")
max(RangedPos$y)
min(RangedPos$y)
View(OneDConcPlot)
OneDCountFunc(RangedPos, 40, "z")
head(OneDConcPlot)
OneDCountFunc(RangedPos, 40, "y")
head(OneDConcPlot)
OneDCountFunc <- function(PosFile, NumberOfBins, Direction){
QuantiledDF <- PosFile %>%
mutate(
Quant =  ntile(PosFile[,Direction], NumberOfBins)
)
OneDConcPlot <<- merge(
QuantiledDF %>%
group_by(Quant) %>%
summarise(Distance = mean(PosFile[,Direction])) %>%
ungroup(),
QuantiledDF %>%
group_by(Quant, Ion) %>%
summarise(Ioncount = n()) %>%
ungroup() %>%
spread(Ion, Ioncount)) %>%
select(-Quant)
# Create colour list from range file
myColors <- c(paste0("#",
(RangeInfo %>%
select(Color, Ion) %>%
distinct())$Color),
"#000000")
names(myColors) <- c((RangeInfo %>%
select(Color, Ion) %>%
distinct())$Ion,
"Unranged")
print(ggplot(OneDConcPlot %>%
gather(Ion, Count, - Distance)) +
geom_point(aes(Distance, Count, color = Ion)) +
scale_color_manual(values = myColors) +
myTheme() +
labs(x = "Distance (nm)",
y = "Count") +
theme(legend.position = "bottom"))
}
OneDCountFunc(RangedPos, 40, "y")
head(OneDConcPlot)
OneDCountFunc <- function(PosFile, NumberOfBins, Direction){
QuantiledDF <- PosFile %>%
mutate(
Quant =  ntile(PosFile[,Direction], NumberOfBins)
)
OneDConcPlot <<- merge(
QuantiledDF %>%
group_by(Quant) %>%
summarise(Distance = mean([,Direction])) %>%
ungroup(),
QuantiledDF %>%
group_by(Quant, Ion) %>%
summarise(Ioncount = n()) %>%
ungroup() %>%
spread(Ion, Ioncount)) %>%
select(-Quant)
# Create colour list from range file
myColors <- c(paste0("#",
(RangeInfo %>%
select(Color, Ion) %>%
distinct())$Color),
"#000000")
names(myColors) <- c((RangeInfo %>%
select(Color, Ion) %>%
distinct())$Ion,
"Unranged")
print(ggplot(OneDConcPlot %>%
gather(Ion, Count, - Distance)) +
geom_point(aes(Distance, Count, color = Ion)) +
scale_color_manual(values = myColors) +
myTheme() +
labs(x = "Distance (nm)",
y = "Count") +
theme(legend.position = "bottom"))
}
OneDCountFunc(RangedPos, 40, "z")
OneDCountFunc <- function(PosFile, NumberOfBins, Direction){
QuantiledDF <- PosFile %>%
mutate(
Quant =  ntile(PosFile[,Direction], NumberOfBins)
)
OneDConcPlot <<- merge(
QuantiledDF %>%
group_by(Quant) %>%
summarise(Distance = mean(z)) %>%
ungroup(),
QuantiledDF %>%
group_by(Quant, Ion) %>%
summarise(Ioncount = n()) %>%
ungroup() %>%
spread(Ion, Ioncount)) %>%
select(-Quant)
# Create colour list from range file
myColors <- c(paste0("#",
(RangeInfo %>%
select(Color, Ion) %>%
distinct())$Color),
"#000000")
names(myColors) <- c((RangeInfo %>%
select(Color, Ion) %>%
distinct())$Ion,
"Unranged")
print(ggplot(OneDConcPlot %>%
gather(Ion, Count, - Distance)) +
geom_point(aes(Distance, Count, color = Ion)) +
scale_color_manual(values = myColors) +
myTheme() +
labs(x = "Distance (nm)",
y = "Count") +
theme(legend.position = "bottom"))
}
OneDCountFunc(RangedPos, 40, "z")
OneDCountFunc <- function(PosFile, NumberOfBins, Direction){
QuantiledDF <- PosFile %>%
mutate(
Quant =  ntile(PosFile[,Direction], NumberOfBins)
)
OneDConcPlot <<- merge(
QuantiledDF %>%
group_by(Quant) %>%
summarise(Distance = mean((QuantiledDF %>%
group_by(Quant))[,Direction])) %>%
ungroup(),
QuantiledDF %>%
group_by(Quant, Ion) %>%
summarise(Ioncount = n()) %>%
ungroup() %>%
spread(Ion, Ioncount)) %>%
select(-Quant)
# Create colour list from range file
myColors <- c(paste0("#",
(RangeInfo %>%
select(Color, Ion) %>%
distinct())$Color),
"#000000")
names(myColors) <- c((RangeInfo %>%
select(Color, Ion) %>%
distinct())$Ion,
"Unranged")
print(ggplot(OneDConcPlot %>%
gather(Ion, Count, - Distance)) +
geom_point(aes(Distance, Count, color = Ion)) +
scale_color_manual(values = myColors) +
myTheme() +
labs(x = "Distance (nm)",
y = "Count") +
theme(legend.position = "bottom"))
}
OneDCountFunc(RangedPos, 40, "z")
OneDCountFunc <- function(PosFile, NumberOfBins, Direction){
QuantiledDF <- PosFile %>%
mutate(
Quant =  ntile(PosFile[,Direction], NumberOfBins)
)
OneDConcPlot <<- merge(
QuantiledDF %>%
group_by(Quant) %>%
summarise(Distance = mean(z)) %>%
ungroup(),
QuantiledDF %>%
group_by(Quant, Ion) %>%
summarise(Ioncount = n()) %>%
ungroup() %>%
spread(Ion, Ioncount)) %>%
select(-Quant)
# Create colour list from range file
myColors <- c(paste0("#",
(RangeInfo %>%
select(Color, Ion) %>%
distinct())$Color),
"#000000")
names(myColors) <- c((RangeInfo %>%
select(Color, Ion) %>%
distinct())$Ion,
"Unranged")
print(ggplot(OneDConcPlot %>%
gather(Ion, Count, - Distance)) +
geom_point(aes(Distance, Count, color = Ion)) +
scale_color_manual(values = myColors) +
myTheme() +
labs(x = "Distance (nm)",
y = "Count") +
theme(legend.position = "bottom"))
}
OneDCountFunc(RangedPos, 40, "z")
OneDCountFunc(RangedPos, 40, 'z')
OneDCountFunc <- function(PosFile, NumberOfBins, Direction){
QuantiledDF <- PosFile %>%
mutate(
Quant =  ntile(PosFile[,Direction], NumberOfBins)
)
OneDConcPlot <<- merge(
QuantiledDF %>%
group_by(Quant) %>%
summarise(Distance = mean(Direction)) %>%
ungroup(),
QuantiledDF %>%
group_by(Quant, Ion) %>%
summarise(Ioncount = n()) %>%
ungroup() %>%
spread(Ion, Ioncount)) %>%
select(-Quant)
# Create colour list from range file
myColors <- c(paste0("#",
(RangeInfo %>%
select(Color, Ion) %>%
distinct())$Color),
"#000000")
names(myColors) <- c((RangeInfo %>%
select(Color, Ion) %>%
distinct())$Ion,
"Unranged")
print(ggplot(OneDConcPlot %>%
gather(Ion, Count, - Distance)) +
geom_point(aes(Distance, Count, color = Ion)) +
scale_color_manual(values = myColors) +
myTheme() +
labs(x = "Distance (nm)",
y = "Count") +
theme(legend.position = "bottom"))
}
OneDCountFunc(RangedPos, 40, 'z')
OneDCountFunc <- function(PosFile, NumberOfBins, Direction){
QuantiledDF <- PosFile %>%
mutate(
Quant =  ntile(PosFile[,Direction], NumberOfBins)
)
OneDConcPlot <<- merge(
QuantiledDF %>%
group_by(Quant) %>%
summarise(Distance = mean(z)) %>%
ungroup(),
QuantiledDF %>%
group_by(Quant, Ion) %>%
summarise(Ioncount = n()) %>%
ungroup() %>%
spread(Ion, Ioncount)) %>%
select(-Quant)
# Create colour list from range file
myColors <- c(paste0("#",
(RangeInfo %>%
select(Color, Ion) %>%
distinct())$Color),
"#000000")
names(myColors) <- c((RangeInfo %>%
select(Color, Ion) %>%
distinct())$Ion,
"Unranged")
print(ggplot(OneDConcPlot %>%
gather(Ion, Count, - Distance)) +
geom_point(aes(Distance, Count, color = Ion)) +
scale_color_manual(values = myColors) +
myTheme() +
labs(x = "Distance (nm)",
y = "Count") +
theme(legend.position = "bottom"))
}
OneDCountFunc(RangedPos, 40, "z")
QuantiledDF <- RangedPos %>%
mutate(
Quant =  ntile(PosFile[,Direction], NumberOfBins)
)
QuantiledDF <- RangedPos %>%
mutate(
Quant =  ntile(RangedPos[,y], NumberOfBins)
)
QuantiledDF <- RangedPos %>%
mutate(
Quant =  ntile(z, NumberOfBins)
)
QuantiledDF <- RangedPos %>%
mutate(
Quant =  ntile(z, 10)
)
QuantiledDF
QuantiledDF %>%
group_by(Quant) %>%
summarise(Distance = mean(z))
QuantiledDF %>%
group_by(Quant)
QuantiledDF %>%
group_by(Quant) %>%
summarise(Distance = mean(z))
Direction = "z"
QuantiledDF %>%
group_by(Quant) %>%
summarise(Distance = mean(Direction))
QuantiledDF %>%
group_by(Quant) %>%
summarise(Distance = mean(df[[Direction]]))
QuantiledDF
sample_n(PosFile,1000) %>%
mutate(
Quant =  ntile(PosFile[,Direction], NumberOfBins)
)
QuantiledDF <- sample_n(RangedPos,1000) %>%
mutate(
Quant =  ntile(PosFile[,Direction], NumberOfBins)
)
QuantiledDF <- sample_n(QuantiledDF, 1000)
QuantiledDF
OneDCountFunc <- function(PosFile, NumberOfBins, Direction){
QuantiledDF <- PosFile %>%
mutate(
Quant =  ntile(PosFile[,Direction], NumberOfBins),
DirectionDistance = PosFile[,Direction]
)
OneDConcPlot <<- merge(
QuantiledDF %>%
group_by(Quant) %>%
summarise(Distance = mean(DirectionDistance)) %>%
ungroup(),
QuantiledDF %>%
group_by(Quant, Ion) %>%
summarise(Ioncount = n()) %>%
ungroup() %>%
spread(Ion, Ioncount)) %>%
select(-Quant)
# Create colour list from range file
myColors <- c(paste0("#",
(RangeInfo %>%
select(Color, Ion) %>%
distinct())$Color),
"#000000")
names(myColors) <- c((RangeInfo %>%
select(Color, Ion) %>%
distinct())$Ion,
"Unranged")
print(ggplot(OneDConcPlot %>%
gather(Ion, Count, - Distance)) +
geom_point(aes(Distance, Count, color = Ion)) +
scale_color_manual(values = myColors) +
myTheme() +
labs(x = "Distance (nm)",
y = "Count") +
theme(legend.position = "bottom"))
}
OneDCountFunc(RangedPos, 40, "z")
OneDCountFunc(RangedPos, 40, "y")
OneDCountFunc(RangedPos, 40, "x")
#### Read intial .pos file ####
PosLocation <- c("Simulated GB.pos")
source("readposR.R")
PosFileInput <- readposR(PosLocation)
##### Combine .pos file with .rrng file to get chemical information ####
RangeFileLocation <- c("Range For Simulation.rrng")
source("Combine Pos and Range File.R")
PosFileRanger(PosFileInput,
RangeFileLocation)
rm(Ion, PosFileInput, PosFileRanger, PosLocation, RangeFileLocation, readposR)
#### Generate 1D concentration profile ####
source("PosOneDimensionalPlot.R")
OneDCountFunc(RangedPos, 40, "z")
OneDCount <- OneDConcPlot
head(OneDConcPlot)
OneDConc <<- OneDCount %>%
group_by(Distance) %>%
summarise(n = n()) %>%
mutate(Total = 0)
OneDConc
OneDCount
OneDConc <<- OneDCount %>%
gather(Ion, Count, -Distance)
OneDConc
OneDConc <<- OneDCount %>%
gather(Ion, Count, -Distance)
OneDConc
OneDConc <<- OneDCount %>%
gather(Ion, Count, -Distance)
OneDConc <<- OneDCount %>%
gather(Ion, Count, -Distance) %>%
group_by(Distance) %>%
mutate(Total = sum(Count))
head(OneDConc)
OneDConc <<- OneDCount %>%
gather(Ion, Count, -Distance) %>%
group_by(Distance) %>%
mutate(Total = sum(Count)) %>%
spread()
OneDConc <<- OneDCount %>%
gather(Ion, Count, -Distance) %>%
group_by(Distance) %>%
mutate(Total = sum(Count)) %>%
spread()
OneDConc <<- OneDCount %>%
gather(Ion, Count, -Distance) %>%
group_by(Distance) %>%
mutate(Total = sum(Count)) %>%
spread(Ion, Count)
OneDConc
OneDConc <<- OneDCount %>%
gather(Ion, Count, -Distance) %>%
group_by(Distance) %>%
mutate(Total = sum(Count),
Concentration = 100 * Count/Total)
OneDConc
OneDConc <<- OneDCount %>%
gather(Ion, Count, -Distance) %>%
group_by(Distance) %>%
mutate(Total = sum(Count),
Concentration = 100 * Count/Total) %>%
spread(Ion, Count)
OneDConc
OneDConc <<- OneDCount %>%
gather(Ion, Count, -Distance) %>%
group_by(Distance) %>%
mutate(Total = sum(Count),
Concentration = 100 * Count/Total)
OneDConc
spread(Ion, Concetration)
OneDConc <<- OneDCount %>%
gather(Ion, Count, -Distance) %>%
group_by(Distance) %>%
mutate(Total = sum(Count),
Concentration = 100 * Count/Total) %>%
select(-Count)
OneDConc
spread(Ion, Concentration)
OneDConc <<- OneDCount %>%
gather(Ion, Count, -Distance) %>%
group_by(Distance) %>%
mutate(Total = sum(Count),
Concentration = 100 * Count/Total)
OneDConc
OneDConc <<- OneDCount %>%
gather(Ion, Count, -Distance) %>%
group_by(Distance) %>%
mutate(Total = sum(Count),
Concentration = 100 * Count/Total) %>%
select(-Count, -Total)
OneDConc
?spread
OneDConc <<- OneDCount %>%
gather(Ion, Count, -Distance) %>%
group_by(Distance) %>%
mutate(Total = sum(Count),
Concentration = 100 * Count/Total) %>%
select(-Count, -Total)
spread(Ion, Concentration)
OneDConc <<- OneDCount %>%
gather(Ion, Count, -Distance) %>%
group_by(Distance) %>%
mutate(Total = sum(Count),
Concentration = 100 * Count/Total) %>%
select(-Count, -Total) %>%
spread(Ion, Concentration)
OneDConc
ggplot(OneDConc %>%
gather(Ion, Concentration, - Distance)) +
geom_point(aes(Distance, Concentration, color = Ion)) +
scale_color_manual(values = myColors) +
myTheme() +
labs(x = "Distance (nm)",
y = "Count") +
theme(legend.position = "bottom")
myColors <- c(paste0("#",
(RangeInfo %>%
select(Color, Ion) %>%
distinct())$Color),
"#000000")
names(myColors) <- c((RangeInfo %>%
select(Color, Ion) %>%
distinct())$Ion,
"Unranged")
ggplot(OneDConc %>%
gather(Ion, Concentration, - Distance)) +
geom_point(aes(Distance, Concentration, color = Ion)) +
scale_color_manual(values = myColors) +
myTheme() +
labs(x = "Distance (nm)",
y = "Count") +
theme(legend.position = "bottom")
#### Read intial .pos file ####
PosLocation <- c("Simulated GB.pos")
source("readposR.R")
PosFileInput <- readposR(PosLocation)
##### Combine .pos file with .rrng file to get chemical information ####
RangeFileLocation <- c("Range For Simulation.rrng")
source("Combine Pos and Range File.R")
PosFileRanger(PosFileInput,
RangeFileLocation)
rm(Ion, PosFileInput, PosFileRanger, PosLocation, RangeFileLocation, readposR)
#### Generate 1D concentration profile ####
source("PosOneDimensionalPlot.R")
OneDCountFunc(RangedPos, 40, "x")
OneDCountFunc(RangedPos, 40, "z")
View(OneDCount)
